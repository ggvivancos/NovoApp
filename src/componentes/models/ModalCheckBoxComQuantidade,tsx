import React, { useState, useEffect } from 'react';
import { Modal, View, TouchableOpacity, Text, StyleSheet, TextInput, ScrollView } from 'react-native';

interface Item {
  id: number;
  label: string;
  }

interface ModalCheckBoxComQuantidadeProps {
  isVisible: boolean;
  onDismiss: () => void;
  onItemSelected: (itemId: number) => void;
  items: Item[];
  selectedItems: number[];
  title?: string;
}

const ModalCheckBox: React.FC<ModalCheckBoxComQuantidadeProps> = ({ isVisible, onDismiss, onItemSelected, items, selectedItems, title = "Selecione um item" }) => {
    const [searchText, setSearchText] = useState('');
    const [filteredItems, setFilteredItems] = useState(items);

    useEffect(() => {
        setFilteredItems(
            items.filter(item => item.label.toLowerCase().includes(searchText.toLowerCase()))
        );
    }, [searchText, items]);

    const isItemSelected = (id: number) => {
        return selectedItems.includes(id);
    };

    return (
        <Modal
            animationType="slide"
            transparent={true}
            visible={isVisible}
            onRequestClose={onDismiss}
        >
            <View style={styles.modalOverlay}>
                <View style={styles.modalView}>
                    <Text style={styles.modalTitle}>{title}</Text>
                    <TextInput
                        style={styles.searchInput}
                        value={searchText}
                        onChangeText={setSearchText}
                        placeholder="Pesquisar..."
                    />
                    <View style={styles.scrollViewContainer}>
                        <ScrollView>
                            {filteredItems.map((item) => (
                                <TouchableOpacity 
                                    key={item.id.toString()} 
                                    onPress={() => onItemSelected(item.id)}
                                    style={styles.itemContainer}
                                >
                                    <View style={isItemSelected(item.id) ? styles.checkboxChecked : styles.checkboxUnchecked} />
                                    <Text style={styles.itemText}>{item.label}</Text>
                                </TouchableOpacity>
                            ))}
                        </ScrollView>
                    </View>
                    <TouchableOpacity style={styles.modalCloseButton} onPress={onDismiss}>
                        <Text style={styles.modalCloseButtonText}>Fechar</Text>
                    </TouchableOpacity>
                </View>
            </View>
        </Modal>
    );
};

const styles = StyleSheet.create({
  modalOverlay: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
  },
  modalView: {
    margin: 20,
    backgroundColor: 'white',
    borderRadius: 20,
    padding: 35,
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.25,
    shadowRadius: 4,
    elevation: 5,
  },
  modalTitle: {
    marginBottom: 15,
    textAlign: 'center',
    fontWeight: 'bold',
    fontSize: 20,
  },
  searchInput: {
    height: 40,
    marginVertical: 10,
    borderWidth: 1,
    padding: 10,
    borderRadius: 10,
    width: '100%',
  },
  scrollViewContainer: {
    maxHeight: 200,
    width: '100%',
    marginVertical: 10,
  },
  itemContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 10,
  },
  checkboxUnchecked: {
    width: 24,
    height: 24,
    borderRadius: 12,
    borderWidth: 2,
    borderColor: '#000',
    marginRight: 10,
  },
  checkboxChecked: {
    width: 24,
    height: 24,
    borderRadius: 12,
    backgroundColor: '#000',
    marginRight: 10,
  },
  itemText: {
    flex: 1,
  },
  quantidadeInput: {
    borderWidth: 1,
    borderColor: '#ccc',
    padding: 10,
    width: 50,
    marginLeft: 10,
  },
  modalCloseButton: {
    marginTop: 10,
    backgroundColor: '#2196F3',
    borderRadius: 20,
    padding: 10,
    elevation: 2,
  },
  modalCloseButtonText: {
    color: 'white',
    fontWeight: 'bold',
    textAlign: 'center',
  },
});

export default ModalCheckBoxComQuantidade;
